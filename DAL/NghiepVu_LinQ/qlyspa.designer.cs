#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.NghiepVu_LinQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SALON_AND_SPA")]
	public partial class qlyspaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACCOUNT(ACCOUNT instance);
    partial void UpdateACCOUNT(ACCOUNT instance);
    partial void DeleteACCOUNT(ACCOUNT instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertBILLINFO(BILLINFO instance);
    partial void UpdateBILLINFO(BILLINFO instance);
    partial void DeleteBILLINFO(BILLINFO instance);
    partial void InsertCATEGORY(CATEGORY instance);
    partial void UpdateCATEGORY(CATEGORY instance);
    partial void DeleteCATEGORY(CATEGORY instance);
    partial void InsertGio_TV(Gio_TV instance);
    partial void UpdateGio_TV(Gio_TV instance);
    partial void DeleteGio_TV(Gio_TV instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLICHHEN_NV(LICHHEN_NV instance);
    partial void UpdateLICHHEN_NV(LICHHEN_NV instance);
    partial void DeleteLICHHEN_NV(LICHHEN_NV instance);
    partial void InsertLOAI_NV(LOAI_NV instance);
    partial void UpdateLOAI_NV(LOAI_NV instance);
    partial void DeleteLOAI_NV(LOAI_NV instance);
    partial void InsertNV_TuVan(NV_TuVan instance);
    partial void UpdateNV_TuVan(NV_TuVan instance);
    partial void DeleteNV_TuVan(NV_TuVan instance);
    partial void InsertPRO_SER(PRO_SER instance);
    partial void UpdatePRO_SER(PRO_SER instance);
    partial void DeletePRO_SER(PRO_SER instance);
    partial void InsertBILL1(BILL1 instance);
    partial void UpdateBILL1(BILL1 instance);
    partial void DeleteBILL1(BILL1 instance);
    #endregion
		
		public qlyspaDataContext() : 
				base(global::DAL.Properties.Settings.Default.SALON_AND_SPAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public qlyspaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlyspaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlyspaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlyspaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACCOUNT> ACCOUNTs
		{
			get
			{
				return this.GetTable<ACCOUNT>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<BILLINFO> BILLINFOs
		{
			get
			{
				return this.GetTable<BILLINFO>();
			}
		}
		
		public System.Data.Linq.Table<CATEGORY> CATEGORies
		{
			get
			{
				return this.GetTable<CATEGORY>();
			}
		}
		
		public System.Data.Linq.Table<Gio_TV> Gio_TVs
		{
			get
			{
				return this.GetTable<Gio_TV>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LICHHEN_NV> LICHHEN_NVs
		{
			get
			{
				return this.GetTable<LICHHEN_NV>();
			}
		}
		
		public System.Data.Linq.Table<LOAI_NV> LOAI_NVs
		{
			get
			{
				return this.GetTable<LOAI_NV>();
			}
		}
		
		public System.Data.Linq.Table<NV_TuVan> NV_TuVans
		{
			get
			{
				return this.GetTable<NV_TuVan>();
			}
		}
		
		public System.Data.Linq.Table<PRO_SER> PRO_SERs
		{
			get
			{
				return this.GetTable<PRO_SER>();
			}
		}
		
		public System.Data.Linq.Table<BILL1> BILL1s
		{
			get
			{
				return this.GetTable<BILL1>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCOUNT")]
	public partial class ACCOUNT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _USERNAME;
		
		private string _PASSWORD;
		
		private System.Nullable<int> _TYPE;
		
		private System.Nullable<int> _HoatDong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPASSWORDChanging(string value);
    partial void OnPASSWORDChanged();
    partial void OnTYPEChanging(System.Nullable<int> value);
    partial void OnTYPEChanged();
    partial void OnHoatDongChanging(System.Nullable<int> value);
    partial void OnHoatDongChanged();
    #endregion
		
		public ACCOUNT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PASSWORD", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PASSWORD
		{
			get
			{
				return this._PASSWORD;
			}
			set
			{
				if ((this._PASSWORD != value))
				{
					this.OnPASSWORDChanging(value);
					this.SendPropertyChanging();
					this._PASSWORD = value;
					this.SendPropertyChanged("PASSWORD");
					this.OnPASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TYPE", DbType="Int")]
		public System.Nullable<int> TYPE
		{
			get
			{
				return this._TYPE;
			}
			set
			{
				if ((this._TYPE != value))
				{
					this.OnTYPEChanging(value);
					this.SendPropertyChanging();
					this._TYPE = value;
					this.SendPropertyChanged("TYPE");
					this.OnTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoatDong", DbType="Int")]
		public System.Nullable<int> HoatDong
		{
			get
			{
				return this._HoatDong;
			}
			set
			{
				if ((this._HoatDong != value))
				{
					this.OnHoatDongChanging(value);
					this.SendPropertyChanging();
					this._HoatDong = value;
					this.SendPropertyChanged("HoatDong");
					this.OnHoatDongChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _Status;
		
		private int _VIP;
		
		private EntitySet<BILL1> _BILL1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    partial void OnVIPChanging(int value);
    partial void OnVIPChanged();
    #endregion
		
		public Room()
		{
			this._BILL1s = new EntitySet<BILL1>(new Action<BILL1>(this.attach_BILL1s), new Action<BILL1>(this.detach_BILL1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VIP", DbType="Int NOT NULL")]
		public int VIP
		{
			get
			{
				return this._VIP;
			}
			set
			{
				if ((this._VIP != value))
				{
					this.OnVIPChanging(value);
					this.SendPropertyChanging();
					this._VIP = value;
					this.SendPropertyChanged("VIP");
					this.OnVIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_BILL1", Storage="_BILL1s", ThisKey="ID", OtherKey="IdRoom")]
		public EntitySet<BILL1> BILL1s
		{
			get
			{
				return this._BILL1s;
			}
			set
			{
				this._BILL1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BILL1s(BILL1 entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_BILL1s(BILL1 entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BILLINFO")]
	public partial class BILLINFO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDBILL;
		
		private int _IDPRO_SER;
		
		private System.Nullable<int> _COUNT;
		
		private EntityRef<PRO_SER> _PRO_SER;
		
		private EntityRef<BILL1> _BILL1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDBILLChanging(int value);
    partial void OnIDBILLChanged();
    partial void OnIDPRO_SERChanging(int value);
    partial void OnIDPRO_SERChanged();
    partial void OnCOUNTChanging(System.Nullable<int> value);
    partial void OnCOUNTChanged();
    #endregion
		
		public BILLINFO()
		{
			this._PRO_SER = default(EntityRef<PRO_SER>);
			this._BILL1 = default(EntityRef<BILL1>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBILL", DbType="Int NOT NULL")]
		public int IDBILL
		{
			get
			{
				return this._IDBILL;
			}
			set
			{
				if ((this._IDBILL != value))
				{
					if (this._BILL1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDBILLChanging(value);
					this.SendPropertyChanging();
					this._IDBILL = value;
					this.SendPropertyChanged("IDBILL");
					this.OnIDBILLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPRO_SER", DbType="Int NOT NULL")]
		public int IDPRO_SER
		{
			get
			{
				return this._IDPRO_SER;
			}
			set
			{
				if ((this._IDPRO_SER != value))
				{
					if (this._PRO_SER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPRO_SERChanging(value);
					this.SendPropertyChanging();
					this._IDPRO_SER = value;
					this.SendPropertyChanged("IDPRO_SER");
					this.OnIDPRO_SERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNT", DbType="Int")]
		public System.Nullable<int> COUNT
		{
			get
			{
				return this._COUNT;
			}
			set
			{
				if ((this._COUNT != value))
				{
					this.OnCOUNTChanging(value);
					this.SendPropertyChanging();
					this._COUNT = value;
					this.SendPropertyChanged("COUNT");
					this.OnCOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRO_SER_BILLINFO", Storage="_PRO_SER", ThisKey="IDPRO_SER", OtherKey="ID", IsForeignKey=true)]
		public PRO_SER PRO_SER
		{
			get
			{
				return this._PRO_SER.Entity;
			}
			set
			{
				PRO_SER previousValue = this._PRO_SER.Entity;
				if (((previousValue != value) 
							|| (this._PRO_SER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRO_SER.Entity = null;
						previousValue.BILLINFOs.Remove(this);
					}
					this._PRO_SER.Entity = value;
					if ((value != null))
					{
						value.BILLINFOs.Add(this);
						this._IDPRO_SER = value.ID;
					}
					else
					{
						this._IDPRO_SER = default(int);
					}
					this.SendPropertyChanged("PRO_SER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BILL1_BILLINFO", Storage="_BILL1", ThisKey="IDBILL", OtherKey="ID", IsForeignKey=true)]
		public BILL1 BILL1
		{
			get
			{
				return this._BILL1.Entity;
			}
			set
			{
				BILL1 previousValue = this._BILL1.Entity;
				if (((previousValue != value) 
							|| (this._BILL1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BILL1.Entity = null;
						previousValue.BILLINFOs.Remove(this);
					}
					this._BILL1.Entity = value;
					if ((value != null))
					{
						value.BILLINFOs.Add(this);
						this._IDBILL = value.ID;
					}
					else
					{
						this._IDBILL = default(int);
					}
					this.SendPropertyChanged("BILL1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CATEGORY")]
	public partial class CATEGORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private EntitySet<PRO_SER> _PRO_SERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public CATEGORY()
		{
			this._PRO_SERs = new EntitySet<PRO_SER>(new Action<PRO_SER>(this.attach_PRO_SERs), new Action<PRO_SER>(this.detach_PRO_SERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_PRO_SER", Storage="_PRO_SERs", ThisKey="ID", OtherKey="IDCATEGORY")]
		public EntitySet<PRO_SER> PRO_SERs
		{
			get
			{
				return this._PRO_SERs;
			}
			set
			{
				this._PRO_SERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PRO_SERs(PRO_SER entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = this;
		}
		
		private void detach_PRO_SERs(PRO_SER entity)
		{
			this.SendPropertyChanging();
			entity.CATEGORY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gio_TV")]
	public partial class Gio_TV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _Gio;
		
		private EntitySet<LICHHEN_NV> _LICHHEN_NVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGioChanging(int value);
    partial void OnGioChanged();
    #endregion
		
		public Gio_TV()
		{
			this._LICHHEN_NVs = new EntitySet<LICHHEN_NV>(new Action<LICHHEN_NV>(this.attach_LICHHEN_NVs), new Action<LICHHEN_NV>(this.detach_LICHHEN_NVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gio", DbType="Int NOT NULL")]
		public int Gio
		{
			get
			{
				return this._Gio;
			}
			set
			{
				if ((this._Gio != value))
				{
					this.OnGioChanging(value);
					this.SendPropertyChanging();
					this._Gio = value;
					this.SendPropertyChanged("Gio");
					this.OnGioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gio_TV_LICHHEN_NV", Storage="_LICHHEN_NVs", ThisKey="ID", OtherKey="ID_Gio_TV")]
		public EntitySet<LICHHEN_NV> LICHHEN_NVs
		{
			get
			{
				return this._LICHHEN_NVs;
			}
			set
			{
				this._LICHHEN_NVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LICHHEN_NVs(LICHHEN_NV entity)
		{
			this.SendPropertyChanging();
			entity.Gio_TV = this;
		}
		
		private void detach_LICHHEN_NVs(LICHHEN_NV entity)
		{
			this.SendPropertyChanging();
			entity.Gio_TV = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _SDT;
		
		private string _USERNAME;
		
		private string _GioiTinh;
		
		private System.DateTime _NamSinh;
		
		private string _CMND;
		
		private string _ADDRESS;
		
		private string _EMAIL;
		
		private System.Nullable<int> _HOATDONG;
		
		private System.Nullable<int> _TICHDIEM;
		
		private EntitySet<LICHHEN_NV> _LICHHEN_NVs;
		
		private EntitySet<BILL1> _BILL1s;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNamSinhChanging(System.DateTime value);
    partial void OnNamSinhChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnADDRESSChanging(string value);
    partial void OnADDRESSChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnHOATDONGChanging(System.Nullable<int> value);
    partial void OnHOATDONGChanged();
    partial void OnTICHDIEMChanging(System.Nullable<int> value);
    partial void OnTICHDIEMChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._LICHHEN_NVs = new EntitySet<LICHHEN_NV>(new Action<LICHHEN_NV>(this.attach_LICHHEN_NVs), new Action<LICHHEN_NV>(this.detach_LICHHEN_NVs));
			this._BILL1s = new EntitySet<BILL1>(new Action<BILL1>(this.attach_BILL1s), new Action<BILL1>(this.detach_BILL1s));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSinh", DbType="Date NOT NULL")]
		public System.DateTime NamSinh
		{
			get
			{
				return this._NamSinh;
			}
			set
			{
				if ((this._NamSinh != value))
				{
					this.OnNamSinhChanging(value);
					this.SendPropertyChanging();
					this._NamSinh = value;
					this.SendPropertyChanged("NamSinh");
					this.OnNamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="Char(12) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADDRESS", DbType="NVarChar(100)")]
		public string ADDRESS
		{
			get
			{
				return this._ADDRESS;
			}
			set
			{
				if ((this._ADDRESS != value))
				{
					this.OnADDRESSChanging(value);
					this.SendPropertyChanging();
					this._ADDRESS = value;
					this.SendPropertyChanged("ADDRESS");
					this.OnADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(100)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOATDONG", DbType="Int")]
		public System.Nullable<int> HOATDONG
		{
			get
			{
				return this._HOATDONG;
			}
			set
			{
				if ((this._HOATDONG != value))
				{
					this.OnHOATDONGChanging(value);
					this.SendPropertyChanging();
					this._HOATDONG = value;
					this.SendPropertyChanged("HOATDONG");
					this.OnHOATDONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TICHDIEM", DbType="Int")]
		public System.Nullable<int> TICHDIEM
		{
			get
			{
				return this._TICHDIEM;
			}
			set
			{
				if ((this._TICHDIEM != value))
				{
					this.OnTICHDIEMChanging(value);
					this.SendPropertyChanging();
					this._TICHDIEM = value;
					this.SendPropertyChanged("TICHDIEM");
					this.OnTICHDIEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_LICHHEN_NV", Storage="_LICHHEN_NVs", ThisKey="Id", OtherKey="Id_KH")]
		public EntitySet<LICHHEN_NV> LICHHEN_NVs
		{
			get
			{
				return this._LICHHEN_NVs;
			}
			set
			{
				this._LICHHEN_NVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_BILL1", Storage="_BILL1s", ThisKey="Id", OtherKey="IdKH")]
		public EntitySet<BILL1> BILL1s
		{
			get
			{
				return this._BILL1s;
			}
			set
			{
				this._BILL1s.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LICHHEN_NVs(LICHHEN_NV entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_LICHHEN_NVs(LICHHEN_NV entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_BILL1s(BILL1 entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_BILL1s(BILL1 entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LICHHEN_NV")]
	public partial class LICHHEN_NV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_Gio_TV;
		
		private int _ID_NV_TV;
		
		private int _Id_KH;
		
		private string _NOIDUNG;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<System.DateTime> _Ngay;
		
		private EntityRef<Gio_TV> _Gio_TV;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NV_TuVan> _NV_TuVan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_Gio_TVChanging(int value);
    partial void OnID_Gio_TVChanged();
    partial void OnID_NV_TVChanging(int value);
    partial void OnID_NV_TVChanged();
    partial void OnId_KHChanging(int value);
    partial void OnId_KHChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnNgayChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayChanged();
    #endregion
		
		public LICHHEN_NV()
		{
			this._Gio_TV = default(EntityRef<Gio_TV>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NV_TuVan = default(EntityRef<NV_TuVan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Gio_TV", DbType="Int NOT NULL")]
		public int ID_Gio_TV
		{
			get
			{
				return this._ID_Gio_TV;
			}
			set
			{
				if ((this._ID_Gio_TV != value))
				{
					if (this._Gio_TV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_Gio_TVChanging(value);
					this.SendPropertyChanging();
					this._ID_Gio_TV = value;
					this.SendPropertyChanged("ID_Gio_TV");
					this.OnID_Gio_TVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_NV_TV", DbType="Int NOT NULL")]
		public int ID_NV_TV
		{
			get
			{
				return this._ID_NV_TV;
			}
			set
			{
				if ((this._ID_NV_TV != value))
				{
					if (this._NV_TuVan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_NV_TVChanging(value);
					this.SendPropertyChanging();
					this._ID_NV_TV = value;
					this.SendPropertyChanged("ID_NV_TV");
					this.OnID_NV_TVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_KH", DbType="Int NOT NULL")]
		public int Id_KH
		{
			get
			{
				return this._Id_KH;
			}
			set
			{
				if ((this._Id_KH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_KHChanging(value);
					this.SendPropertyChanging();
					this._Id_KH = value;
					this.SendPropertyChanged("Id_KH");
					this.OnId_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(1000)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngay", DbType="Date")]
		public System.Nullable<System.DateTime> Ngay
		{
			get
			{
				return this._Ngay;
			}
			set
			{
				if ((this._Ngay != value))
				{
					this.OnNgayChanging(value);
					this.SendPropertyChanging();
					this._Ngay = value;
					this.SendPropertyChanged("Ngay");
					this.OnNgayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gio_TV_LICHHEN_NV", Storage="_Gio_TV", ThisKey="ID_Gio_TV", OtherKey="ID", IsForeignKey=true)]
		public Gio_TV Gio_TV
		{
			get
			{
				return this._Gio_TV.Entity;
			}
			set
			{
				Gio_TV previousValue = this._Gio_TV.Entity;
				if (((previousValue != value) 
							|| (this._Gio_TV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gio_TV.Entity = null;
						previousValue.LICHHEN_NVs.Remove(this);
					}
					this._Gio_TV.Entity = value;
					if ((value != null))
					{
						value.LICHHEN_NVs.Add(this);
						this._ID_Gio_TV = value.ID;
					}
					else
					{
						this._ID_Gio_TV = default(int);
					}
					this.SendPropertyChanged("Gio_TV");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_LICHHEN_NV", Storage="_KHACHHANG", ThisKey="Id_KH", OtherKey="Id", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.LICHHEN_NVs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.LICHHEN_NVs.Add(this);
						this._Id_KH = value.Id;
					}
					else
					{
						this._Id_KH = default(int);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NV_TuVan_LICHHEN_NV", Storage="_NV_TuVan", ThisKey="ID_NV_TV", OtherKey="ID", IsForeignKey=true)]
		public NV_TuVan NV_TuVan
		{
			get
			{
				return this._NV_TuVan.Entity;
			}
			set
			{
				NV_TuVan previousValue = this._NV_TuVan.Entity;
				if (((previousValue != value) 
							|| (this._NV_TuVan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NV_TuVan.Entity = null;
						previousValue.LICHHEN_NVs.Remove(this);
					}
					this._NV_TuVan.Entity = value;
					if ((value != null))
					{
						value.LICHHEN_NVs.Add(this);
						this._ID_NV_TV = value.ID;
					}
					else
					{
						this._ID_NV_TV = default(int);
					}
					this.SendPropertyChanged("NV_TuVan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAI_NV")]
	public partial class LOAI_NV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private EntitySet<NV_TuVan> _NV_TuVans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public LOAI_NV()
		{
			this._NV_TuVans = new EntitySet<NV_TuVan>(new Action<NV_TuVan>(this.attach_NV_TuVans), new Action<NV_TuVan>(this.detach_NV_TuVans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_NV_NV_TuVan", Storage="_NV_TuVans", ThisKey="ID", OtherKey="ID_LOAINV")]
		public EntitySet<NV_TuVan> NV_TuVans
		{
			get
			{
				return this._NV_TuVans;
			}
			set
			{
				this._NV_TuVans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NV_TuVans(NV_TuVan entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_NV = this;
		}
		
		private void detach_NV_TuVans(NV_TuVan entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_NV = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NV_TuVan")]
	public partial class NV_TuVan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private System.DateTime _NamSinh;
		
		private string _GioiTinh;
		
		private string _DIACHI;
		
		private string _CMND;
		
		private string _SDT;
		
		private int _ID_LOAINV;
		
		private System.Nullable<int> _HoatDong_TV;
		
		private EntitySet<LICHHEN_NV> _LICHHEN_NVs;
		
		private EntityRef<LOAI_NV> _LOAI_NV;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnNamSinhChanging(System.DateTime value);
    partial void OnNamSinhChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnCMNDChanging(string value);
    partial void OnCMNDChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnID_LOAINVChanging(int value);
    partial void OnID_LOAINVChanged();
    partial void OnHoatDong_TVChanging(System.Nullable<int> value);
    partial void OnHoatDong_TVChanged();
    #endregion
		
		public NV_TuVan()
		{
			this._LICHHEN_NVs = new EntitySet<LICHHEN_NV>(new Action<LICHHEN_NV>(this.attach_LICHHEN_NVs), new Action<LICHHEN_NV>(this.detach_LICHHEN_NVs));
			this._LOAI_NV = default(EntityRef<LOAI_NV>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSinh", DbType="Date NOT NULL")]
		public System.DateTime NamSinh
		{
			get
			{
				return this._NamSinh;
			}
			set
			{
				if ((this._NamSinh != value))
				{
					this.OnNamSinhChanging(value);
					this.SendPropertyChanging();
					this._NamSinh = value;
					this.SendPropertyChanged("NamSinh");
					this.OnNamSinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CMND", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string CMND
		{
			get
			{
				return this._CMND;
			}
			set
			{
				if ((this._CMND != value))
				{
					this.OnCMNDChanging(value);
					this.SendPropertyChanging();
					this._CMND = value;
					this.SendPropertyChanged("CMND");
					this.OnCMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOAINV", DbType="Int NOT NULL")]
		public int ID_LOAINV
		{
			get
			{
				return this._ID_LOAINV;
			}
			set
			{
				if ((this._ID_LOAINV != value))
				{
					if (this._LOAI_NV.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOAINVChanging(value);
					this.SendPropertyChanging();
					this._ID_LOAINV = value;
					this.SendPropertyChanged("ID_LOAINV");
					this.OnID_LOAINVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoatDong_TV", DbType="Int")]
		public System.Nullable<int> HoatDong_TV
		{
			get
			{
				return this._HoatDong_TV;
			}
			set
			{
				if ((this._HoatDong_TV != value))
				{
					this.OnHoatDong_TVChanging(value);
					this.SendPropertyChanging();
					this._HoatDong_TV = value;
					this.SendPropertyChanged("HoatDong_TV");
					this.OnHoatDong_TVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NV_TuVan_LICHHEN_NV", Storage="_LICHHEN_NVs", ThisKey="ID", OtherKey="ID_NV_TV")]
		public EntitySet<LICHHEN_NV> LICHHEN_NVs
		{
			get
			{
				return this._LICHHEN_NVs;
			}
			set
			{
				this._LICHHEN_NVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_NV_NV_TuVan", Storage="_LOAI_NV", ThisKey="ID_LOAINV", OtherKey="ID", IsForeignKey=true)]
		public LOAI_NV LOAI_NV
		{
			get
			{
				return this._LOAI_NV.Entity;
			}
			set
			{
				LOAI_NV previousValue = this._LOAI_NV.Entity;
				if (((previousValue != value) 
							|| (this._LOAI_NV.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI_NV.Entity = null;
						previousValue.NV_TuVans.Remove(this);
					}
					this._LOAI_NV.Entity = value;
					if ((value != null))
					{
						value.NV_TuVans.Add(this);
						this._ID_LOAINV = value.ID;
					}
					else
					{
						this._ID_LOAINV = default(int);
					}
					this.SendPropertyChanged("LOAI_NV");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LICHHEN_NVs(LICHHEN_NV entity)
		{
			this.SendPropertyChanging();
			entity.NV_TuVan = this;
		}
		
		private void detach_LICHHEN_NVs(LICHHEN_NV entity)
		{
			this.SendPropertyChanging();
			entity.NV_TuVan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRO_SER")]
	public partial class PRO_SER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private int _IDCATEGORY;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _MOTA;
		
		private float _Price;
		
		private EntitySet<BILLINFO> _BILLINFOs;
		
		private EntityRef<CATEGORY> _CATEGORY;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnIDCATEGORYChanging(int value);
    partial void OnIDCATEGORYChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnPriceChanging(float value);
    partial void OnPriceChanged();
    #endregion
		
		public PRO_SER()
		{
			this._BILLINFOs = new EntitySet<BILLINFO>(new Action<BILLINFO>(this.attach_BILLINFOs), new Action<BILLINFO>(this.detach_BILLINFOs));
			this._CATEGORY = default(EntityRef<CATEGORY>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCATEGORY", DbType="Int NOT NULL")]
		public int IDCATEGORY
		{
			get
			{
				return this._IDCATEGORY;
			}
			set
			{
				if ((this._IDCATEGORY != value))
				{
					if (this._CATEGORY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCATEGORYChanging(value);
					this.SendPropertyChanging();
					this._IDCATEGORY = value;
					this.SendPropertyChanged("IDCATEGORY");
					this.OnIDCATEGORYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(1000)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price")]
		public float Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRO_SER_BILLINFO", Storage="_BILLINFOs", ThisKey="ID", OtherKey="IDPRO_SER")]
		public EntitySet<BILLINFO> BILLINFOs
		{
			get
			{
				return this._BILLINFOs;
			}
			set
			{
				this._BILLINFOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CATEGORY_PRO_SER", Storage="_CATEGORY", ThisKey="IDCATEGORY", OtherKey="ID", IsForeignKey=true)]
		public CATEGORY CATEGORY
		{
			get
			{
				return this._CATEGORY.Entity;
			}
			set
			{
				CATEGORY previousValue = this._CATEGORY.Entity;
				if (((previousValue != value) 
							|| (this._CATEGORY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CATEGORY.Entity = null;
						previousValue.PRO_SERs.Remove(this);
					}
					this._CATEGORY.Entity = value;
					if ((value != null))
					{
						value.PRO_SERs.Add(this);
						this._IDCATEGORY = value.ID;
					}
					else
					{
						this._IDCATEGORY = default(int);
					}
					this.SendPropertyChanged("CATEGORY");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BILLINFOs(BILLINFO entity)
		{
			this.SendPropertyChanging();
			entity.PRO_SER = this;
		}
		
		private void detach_BILLINFOs(BILLINFO entity)
		{
			this.SendPropertyChanging();
			entity.PRO_SER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BILL")]
	public partial class BILL1 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IdKH;
		
		private int _IdRoom;
		
		private System.Nullable<double> _TOTALPRICE;
		
		private System.Nullable<System.DateTime> _DATEIN;
		
		private System.Nullable<int> _Status;
		
		private int _Discount;
		
		private EntitySet<BILLINFO> _BILLINFOs;
		
		private EntityRef<Room> _Room;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIdKHChanging(int value);
    partial void OnIdKHChanged();
    partial void OnIdRoomChanging(int value);
    partial void OnIdRoomChanged();
    partial void OnTOTALPRICEChanging(System.Nullable<double> value);
    partial void OnTOTALPRICEChanged();
    partial void OnDATEINChanging(System.Nullable<System.DateTime> value);
    partial void OnDATEINChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnDiscountChanging(int value);
    partial void OnDiscountChanged();
    #endregion
		
		public BILL1()
		{
			this._BILLINFOs = new EntitySet<BILLINFO>(new Action<BILLINFO>(this.attach_BILLINFOs), new Action<BILLINFO>(this.detach_BILLINFOs));
			this._Room = default(EntityRef<Room>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKH", DbType="Int NOT NULL")]
		public int IdKH
		{
			get
			{
				return this._IdKH;
			}
			set
			{
				if ((this._IdKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKHChanging(value);
					this.SendPropertyChanging();
					this._IdKH = value;
					this.SendPropertyChanged("IdKH");
					this.OnIdKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRoom", DbType="Int NOT NULL")]
		public int IdRoom
		{
			get
			{
				return this._IdRoom;
			}
			set
			{
				if ((this._IdRoom != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRoomChanging(value);
					this.SendPropertyChanging();
					this._IdRoom = value;
					this.SendPropertyChanged("IdRoom");
					this.OnIdRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTALPRICE", DbType="Float")]
		public System.Nullable<double> TOTALPRICE
		{
			get
			{
				return this._TOTALPRICE;
			}
			set
			{
				if ((this._TOTALPRICE != value))
				{
					this.OnTOTALPRICEChanging(value);
					this.SendPropertyChanging();
					this._TOTALPRICE = value;
					this.SendPropertyChanged("TOTALPRICE");
					this.OnTOTALPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATEIN", DbType="DateTime")]
		public System.Nullable<System.DateTime> DATEIN
		{
			get
			{
				return this._DATEIN;
			}
			set
			{
				if ((this._DATEIN != value))
				{
					this.OnDATEINChanging(value);
					this.SendPropertyChanging();
					this._DATEIN = value;
					this.SendPropertyChanged("DATEIN");
					this.OnDATEINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int NOT NULL")]
		public int Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BILL1_BILLINFO", Storage="_BILLINFOs", ThisKey="ID", OtherKey="IDBILL")]
		public EntitySet<BILLINFO> BILLINFOs
		{
			get
			{
				return this._BILLINFOs;
			}
			set
			{
				this._BILLINFOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_BILL1", Storage="_Room", ThisKey="IdRoom", OtherKey="ID", IsForeignKey=true)]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.BILL1s.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.BILL1s.Add(this);
						this._IdRoom = value.ID;
					}
					else
					{
						this._IdRoom = default(int);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_BILL1", Storage="_KHACHHANG", ThisKey="IdKH", OtherKey="Id", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.BILL1s.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.BILL1s.Add(this);
						this._IdKH = value.Id;
					}
					else
					{
						this._IdKH = default(int);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BILLINFOs(BILLINFO entity)
		{
			this.SendPropertyChanging();
			entity.BILL1 = this;
		}
		
		private void detach_BILLINFOs(BILLINFO entity)
		{
			this.SendPropertyChanging();
			entity.BILL1 = null;
		}
	}
}
#pragma warning restore 1591
